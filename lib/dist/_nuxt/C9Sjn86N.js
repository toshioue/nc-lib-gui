const f=[{id:0,title:"h:mm",example:"(e.g. 1:23)",regex:/(\d+)(?::(\d+))?/},{id:1,title:"h:mm:ss",example:"(e.g. 3:45, 1:23:40)",regex:/(\d+)?(?::(\d+))?(?::(\d+))?/},{id:2,title:"h:mm:ss.s",example:"(e.g. 3:34.6, 1:23:40.0)",regex:/(\d+)?(?::(\d+))?(?::(\d+))?(?:.(\d{0,4})?)?/},{id:3,title:"h:mm:ss.ss",example:"(e.g. 3.45.67, 1:23:40.00)",regex:/(\d+)?(?::(\d+))?(?::(\d+))?(?:.(\d{0,4})?)?/},{id:4,title:"h:mm:ss.sss",example:"(e.g. 3.45.678, 1:23:40.000)",regex:/(\d+)?(?::(\d+))?(?::(\d+))?(?:.(\d{0,4})?)?/}],r=(c,n=!1)=>`${c}`.padStart(n?3:2,"0"),m=(c,n)=>{if(c===""||c===null||c===void 0)return c;const d=Math.round(c%1*1e3),h=Math.round(d/10),l=Math.round(h/10),t=Math.floor(parseInt(c,10)/(60*60)),o=Math.floor((parseInt(c,10)-t*60*60)/60),e=parseInt(c,10)-t*60*60-o*60;return n===0?`${r(t)}:${r(o+(e>=30?1:0))}`:n===1?`${r(t)}:${r(o)}:${r(e)}`:n===2?`${r(t)}:${r(o)}:${r(e)}.${l}`:n===3?`${r(t)}:${r(o)}:${r(e)}.${r(h)}`:n===4?`${r(t)}:${r(o)}:${r(e)}.${r(d,!0)}`:c},M=(c,n)=>{const d={_sec:0,_isValid:!0},h=f[n].regex;if(h.test(c)){let l,t,o;const e=c.match(h);if(e[0]&&e[1]&&!e[2]&&!e[3]&&!e[4]){const s=parseInt(e[1],10);e.input.slice(-1)===":"?(l=e[1],t=0,o=0):n===0?(l=Math.floor(s/60),t=Math.floor(s-l*3600/60),o=0):(l=Math.floor(e[1]/3600),t=Math.floor(e[1]/60)%60,o=s%60)}else n!==0&&e[1]&&e[2]&&!e[3]?(l=0,t=e[1],o=e[2]):(l=e[1]||0,t=e[2]||0,o=e[3]||0);if(n===0)d._sec=l*3600+t*60;else if(n===1)d._sec=l*3600+t*60+o*1;else if(n===2){const s=e[4]||0,i=Math.log(s)*Math.LOG10E+1|0,a=(i===4?Math.round(s/1e3):i===3?Math.round(s/100):i===2?Math.round(s/10):s)*100;d._sec=l*3600+t*60+o*1+a/1e3}else if(n===3){const s=e[4]||0,i=Math.log(s)*Math.LOG10E+1|0,a=(i===4?Math.round(s/100):i===3?Math.round(s/10):s)*10;d._sec=l*3600+t*60+o*1+a/1e3}else if(n===4){let s=e[4]||0;s=((Math.log(s)*Math.LOG10E+1|0)===4?Math.round(s/10):s)*1,d._sec=l*3600+t*60+o*1+s/1e3}}else d._isValid=!1;return d};export{M as a,m as c,f as d};
